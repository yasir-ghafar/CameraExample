# This is a basic workflow to help you get started with Actions
name: Android Build
  # this is the name of the workflow, when we navigate to the actions tab name will be listed there.

# Controls when the workflow will run
on:
  # this is where we specify the events that should trigger the execution of our workflow.
  # here we are passing it two event. We specified the master branch as the target branch.

  # Triggers the workflow on push or pull request events but only for the "master" branch
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # here we will define our jobs to be performed when event triggers
  # A workflow is a collection of jobs.


  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Github provides Ubuntu Linux, Windows and macOS runners to run workflows. this is where we
    # specify the type of runner we want to use. in our case we are using the Ubuntu Linux runner.


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Runs a single command using the runners shell
      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: AndroidCICD.apk
          path: app/build/outputs/apk/debug/app-debug.apk